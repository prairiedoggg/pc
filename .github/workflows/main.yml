name: Deploy Frontend (S3 + CloudFront)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
          
      - name: Build Next.js
        run: npm run build
      
      - name: Build Check
        run: |
          ls -la
          echo "Checking for 'out' directory:"
          ls -la out || echo "out directory not found"
          find . -name "out" -type d || echo "No 'out' directory found in subdirectories"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Sync to S3
        run: |
          if [ -d "./out" ]; then
            # 'out' 디렉토리가 존재하면 S3에 동기화
            aws s3 sync ./out/ s3://${{ secrets.S3_BUCKET }} --delete
          else
            echo "Error: out directory not found"
            echo "Looking for build output in alternate locations..."
            
            # Next.js 최신 버전에서는 .next/static 디렉토리 확인
            if [ -d "./.next/static" ]; then
              echo "Found .next/static directory - syncing static assets"
              
              # Static 파일은 _next/static 경로로 업로드
              aws s3 sync ./.next/static/ s3://${{ secrets.S3_BUCKET }}/_next/static/ --delete
              
              # 정적 에셋 (public 폴더의 내용)
              aws s3 sync ./public/ s3://${{ secrets.S3_BUCKET }}/ --delete
              
              echo "Static assets synced successfully"
            else
              echo "No build output found in expected locations"
              ls -la
              exit 1
            fi
          fi

      - name: Invalidate CloudFront Cache
        if: success()
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.DISTRIBUTION_ID }} \
            --paths "/*"
